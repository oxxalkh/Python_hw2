"""
Реализовать метакласс. позволяющий создавать всегда один и тот же
объект класса

для запоминания:
Шаблон Singleton предоставляет механизм создания одного и только одиного
экземпляра объекта, и предоставление к нему глобальную точку доступа.
Поэтому, Singletons обычно используются в таких случаях, как ведение журнала
или операции с базой данных, диспетчера очереди печати и многих других,
где существует необходимость иметь только один экземпляр, который доступен во
всем приложении, чтобы избежать конфликтующих запросов на один и тот же ресурс.

"""


class Singleton(type):
    instance = None

    def __call__(self):
        if self.instance is None:
            self.instance = super().__call__()
        return self.instance


class MyClass(metaclass=Singleton):
    pass


obj_1 = MyClass()
obj_2 = MyClass()
print(obj_1 is obj_2)


